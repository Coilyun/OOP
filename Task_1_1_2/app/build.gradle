/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'jacoco' // Добавляем плагин JaCoCo
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // JUnit Jupiter API для написания тестов
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    // JUnit Jupiter Engine для запуска тестов
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    // Подключение JUnit Platform Launcher (необязательно, если не требуется для интеграции с другими системами)
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'

    // Подключение Guava (если необходимо для приложения)
    implementation 'com.google.guava:guava:32.0.1-jre'
}


// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test // Убедитесь, что тесты выполнены перед отчетом
    reports {
        xml {
            destination file("$buildDir/reports/jacoco/test/jacocoTestReport.xml")
        }
        html {
            destination file("$buildDir/reports/jacoco/test/html")
        }
    }
}

